{"version":3,"sources":["modules/statistics/service.js","modules/statistics/components/statisticCard.js","modules/statistics/components/hospitalizedCard.js","core/enums/pageType.js","modules/statistics/components/mapComponent.js","modules/statistics/components/currentStatistics.js","modules/statistics/view/statisticPage.js","modules/statistics/routes.js","app/layout/components/navBar.js","app/layout/components/bottomNavBar.js","app/layout/layout.js","app/routes.js","app/App.js","serviceWorker.js","index.js","images/active.png","images/cured.png","images/death.png","images/infected.png","images/newcases.png","images/hospitalized.png","images/newdeath.png","images/pin.png"],"names":["getStatistics","axios","get","then","data","StatisticCard","props","Card","raised","className","style","height","width","padding","src","icon","CardContent","Typography","component","variant","title","end","value","HospitalizedCard","classes","makeStyles","theme","root","display","details","flexDirection","textAlign","content","flex","cover","verticalAlign","justifyContent","alignItems","useStyles","useTheme","color","item","nameE","nameS","nameT","treatmentTotal","PageType","Object","freeze","Local","Global","HospitalDetails","Charts","Map","useState","latitude","longitude","zoom","viewport","setViewport","margin","mapboxApiAccessToken","mapStyle","onViewportChange","map","x","offsetLeft","offsetTop","widows","alt","pin","CurrentStatistics","lastUpdated","moment","local","global","hospitalData","currentStatistics","setcurrentStatistics","filteredHospitalData","setfilteredHospitalData","searchText","setsearchText","toSnakeCase","string","replace","y","toLowerCase","mapHospitalizedData","id","hospital","name","name_si","name_ta","treatmentLocal","treatment_local","treatmentForeign","treatment_foreign","treatment_total","useEffect","filter","indexOf","service","update_date_time","infected","local_total_cases","active","local_active_cases","hospitalized","local_total_number_of_individuals_in_hospitals","cured","local_recovered","newcase","local_new_cases","death","local_deaths","global_total_cases","global_deaths","global_recovered","global_new_cases","newdeath","global_new_deaths","hospital_data","useMediaQuery","marginLeft","fromNow","Grid","justify","container","xs","sm","lg","xl","pageType","direction","maxWidth","TextField","Width","label","multiline","onChange","e","event","target","length","key","getRelatedPage","StatisticPage","marginRight","StatisticRoute","match","exact","path","render","NavBar","AppBar","position","backgroundColor","Toolbar","textShadow","align","BottomNavBar","BottomNavigation","showLabels","BottomNavigationAction","Room","onClick","Public","HomeWork","Assessment","Layout","children","AppRoutes","setPageType","bind","left","right","marginTop","marginBottom","App","darkTheme","createMuiTheme","palette","type","primary","light","main","dark","contrastText","secondary","ThemeProvider","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.e72e5ba5.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default {\r\n    getStatistics\r\n}\r\n\r\nfunction getStatistics() {\r\n    return axios.get(`https://hpb.health.gov.lk/api/get-current-statistical`).then((data) => data.data.data);\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Card, CardContent, Typography } from '@material-ui/core';\r\nimport CountUp  from 'react-countup';\r\n\r\nconst StatisticCard = props => {\r\n    return (\r\n        <div >\r\n            <Card raised={true}>\r\n                <div className=\"text-center\">\r\n                    <img style={{ height: '75%' , width:'75%', padding: '10%' }} src={props.icon} />\r\n                </div>\r\n                <CardContent className='text-center'>\r\n                    <Typography component=\"h6\" variant=\"h6\">\r\n                       {props.title} \r\n                    </Typography>\r\n                    <Typography component=\"h5\" variant=\"h5\">\r\n                        {<CountUp end={props.value} />}\r\n                    </Typography>\r\n                    {/* <h6>{props.title}</h6>\r\n                    <h4 style={{ color: props.color }}><CountUp end={props.value} /></h4> */}\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nStatisticCard.propTypes = {\r\n    icon: PropTypes.any,\r\n    title: PropTypes.any,\r\n    value: PropTypes.any,\r\n    color: PropTypes.any,\r\n}\r\n\r\nexport default StatisticCard\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Card, CardContent, Typography } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst HospitalizedCard = props => {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        details: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            width:'75%',\r\n            textAlign:'left'\r\n\r\n        },\r\n        content: {\r\n            flex: '1 0 auto',\r\n        },\r\n        cover: {\r\n            width: '25%',\r\n            textAlign: 'center',\r\n            verticalAlign: 'middle',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    return (\r\n        <div>\r\n            <Card className={classes.root}>\r\n                <div className={classes.details}>\r\n                    <CardContent className={classes.content}>\r\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                            {props.item.nameE}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                            {props.item.nameS}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                            {props.item.nameT}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </div>\r\n                <CardContent className={classes.cover} >\r\n                    <Typography component=\"h5\" variant=\"h5\">\r\n                        {<CountUp end={props.item.treatmentTotal} />}\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nHospitalizedCard.propTypes = {\r\n    item: PropTypes.any,\r\n}\r\n\r\nexport default HospitalizedCard\r\n","var PageTypeEnums = {\r\n    Local: 0,\r\n    Global: 1,\r\n    HospitalDetails: 2,\r\n    Charts:3\r\n};\r\n\r\nexport const PageType = Object.freeze(PageTypeEnums);","import React, { useState } from 'react';\r\nimport ReactMapGL, { Marker } from 'react-map-gl';\r\nimport { BaseControl } from 'react-map-gl';\r\nimport pin from '../../../images/pin.png';\r\nconst TOKEN = 'pk.eyJ1IjoiYXRoZWVrYXpteSIsImEiOiJjazhmN3R1ZzAwMTdhM21wZTNxbDNsM3F6In0.KJa2Nt-uHs_S3ABCDvUsuA';\r\n\r\n\r\nexport default function Map() {\r\n\r\n    const [viewport, setViewport] = useState({\r\n        width: '350px',\r\n        height: '500px',\r\n        latitude: 7.945387,\r\n        longitude: 80.642178,\r\n        zoom: 6.4\r\n    });\r\n\r\n    const CITIES = [\r\n        {\r\n            latitude: 6.922727,\r\n            longitude: 79.918181\r\n        },\r\n        {\r\n            latitude: 6.918075,\r\n            longitude: 79.866853\r\n        },\r\n        {\r\n            latitude: 7.029362,\r\n            longitude: 79.924039\r\n        },\r\n        {\r\n            latitude: 6.06734,\r\n            longitude: 80.226127\r\n        },\r\n        {\r\n            latitude: 8.325041,\r\n            longitude: 80.41399\r\n        },\r\n        {\r\n            latitude: 7.479356,\r\n            longitude: 80.359072\r\n        },\r\n        {\r\n            latitude: 9.663045,\r\n            longitude: 80.021415\r\n        },\r\n        {\r\n            latitude: 7.28785,\r\n            longitude: 80.632264\r\n        },\r\n        {\r\n            latitude: 7.708319,\r\n            longitude: 81.690654\r\n        },\r\n        {\r\n            latitude: 7.091615,\r\n            longitude: 80.000677\r\n        },\r\n        {\r\n            latitude: 7.212306,\r\n            longitude: 79.848984\r\n        },\r\n        {\r\n            latitude: 6.687006,\r\n            longitude: 80.393056\r\n        },\r\n        {\r\n            latitude: 6.992117,\r\n            longitude: 81.052372\r\n\r\n        },\r\n        {\r\n            latitude: 6.917933,\r\n            longitude: 79.876198\r\n        },\r\n        {\r\n            latitude: 6.920259,\r\n            longitude: 79.87053\r\n        },\r\n        {\r\n            latitude: 7.943418,\r\n            longitude: 81.009509\r\n        },\r\n        {\r\n            latitude: 6.867125,\r\n            longitude: 79.876829\r\n        },\r\n        {\r\n            latitude: 6.909905,\r\n            longitude: 79.885005\r\n        },\r\n        {\r\n            latitude: 6.127807,\r\n            longitude: 81.12215\r\n        },\r\n        {\r\n            latitude: 6.960047,\r\n            longitude: 81.338415\r\n        },\r\n        {\r\n            latitude: 7.94834,\r\n            longitude: 81.245997\r\n        },\r\n        {\r\n            latitude: 6.56343,\r\n            longitude: 79.985229\r\n        },\r\n        {\r\n            latitude: 7.025129,\r\n            longitude: 79.903521\r\n        },\r\n        {\r\n            latitude: 6.925084,\r\n            longitude: 79.942917\r\n        },\r\n        {\r\n            latitude: 6.847387,\r\n            longitude: 79.991901\r\n        },\r\n        {\r\n            latitude: 6.924717,\r\n            longitude: 79.962556\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ margin: 'auto', textAlign: 'center' }}>\r\n            <ReactMapGL mapboxApiAccessToken={TOKEN}\r\n                {...viewport}\r\n                mapStyle=\"mapbox://styles/mapbox/dark-v9\"\r\n                onViewportChange={setViewport}>\r\n                {CITIES.map(x => <Marker latitude={x.latitude} longitude={x.longitude} offsetLeft={-10} offsetTop={-25}>\r\n                    <div>\r\n                        <img style={{ widows: 25, height: 25 }} alt='pin' src={pin} />\r\n                    </div>\r\n                </Marker>)}\r\n\r\n            </ReactMapGL>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport service from '../service';\r\nimport moment from 'moment'\r\nimport StatisticCard from './statisticCard';\r\nimport HospitalizedCard from './hospitalizedCard';\r\nimport { PageType } from '../../../core/enums/pageType';\r\nimport { Grid } from '@material-ui/core';\r\nimport active from '../../../images/active.png';\r\nimport cured from '../../../images/cured.png';\r\nimport death from '../../../images/death.png';\r\nimport infected from '../../../images/infected.png';\r\nimport hospitalized from '../../../images/hospitalized.png';\r\nimport newcase from '../../../images/newcases.png';\r\nimport newdeath from '../../../images/newdeath.png';\r\nimport { TextField } from '@material-ui/core';\r\nimport MapComponent from './mapComponent';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nexport const CurrentStatistics = props => {\r\n\r\n    const [currentStatistics, setcurrentStatistics] = useState({\r\n        lastUpdated: moment(),\r\n        local: [],\r\n        global: [],\r\n        hospitalData: []\r\n    });\r\n\r\n    const [filteredHospitalData, setfilteredHospitalData] = useState();\r\n\r\n    const [searchText, setsearchText] = useState('');\r\n\r\n    const handleChange = (event) => {\r\n        (event.target.value.length >= 0) && setsearchText(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        var hospitalData = currentStatistics.hospitalData.filter(x => {\r\n            return x.nameE.toLowerCase().indexOf(searchText.toLowerCase()) >= 0;\r\n        });\r\n        setfilteredHospitalData(hospitalData);\r\n    }, [searchText]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    function toSnakeCase(string) {\r\n        return string.replace(/(?:^|\\.?)([A-Z])/g, function (x, y) { return \"_\" + y.toLowerCase() }).replace(/^_/, \"\");\r\n    }\r\n\r\n\r\n\r\n    function fetchData() {\r\n        return service.getStatistics().then(data => {\r\n            setcurrentStatistics({\r\n                lastUpdated: data.update_date_time,\r\n                local: [\r\n                    {\r\n                        icon: infected,\r\n                        title: 'Infected',\r\n                        value: data.local_total_cases,\r\n                        color: '#1CA0F2'\r\n                    },\r\n                    {\r\n                        icon: active,\r\n                        title: 'Active',\r\n                        value: data.local_active_cases,\r\n                        color: '#FFAA21'\r\n                    },\r\n                    {\r\n                        icon: hospitalized,\r\n                        title: 'Hospitalized',\r\n                        value: data.local_total_number_of_individuals_in_hospitals,\r\n                        color: '#F35D22'\r\n                    },\r\n                    {\r\n                        icon: cured,\r\n                        title: 'Recovered',\r\n                        value: data.local_recovered,\r\n                        color: '#1EBC64'\r\n                    },\r\n                    {\r\n                        icon: newcase,\r\n                        title: 'New Cases',\r\n                        value: data.local_new_cases,\r\n                        color: '#BB86FC'\r\n                    },\r\n                    {\r\n                        icon: death,\r\n                        title: 'Deaths',\r\n                        value: data.local_deaths,\r\n                        color: '#FB5287'\r\n                    },\r\n                ],\r\n                global: [\r\n                    {\r\n                        icon: infected,\r\n                        title: 'Infected',\r\n                        value: data.global_total_cases,\r\n                        color: '#1CA0F2'\r\n                    },\r\n                    {\r\n                        icon: active,\r\n                        title: 'Active',\r\n                        value: (data.global_total_cases - data.global_deaths - data.global_recovered),\r\n                        color: '#FFAA21'\r\n                    },\r\n                    {\r\n                        icon: newcase,\r\n                        title: 'New Cases',\r\n                        value: data.global_new_cases,\r\n                        color: '#BB86FC'\r\n                    },\r\n                    {\r\n                        icon: death,\r\n                        title: 'Deaths',\r\n                        value: data.global_deaths,\r\n                        color: '#FB5287'\r\n                    },\r\n                    {\r\n                        icon: newdeath,\r\n                        title: 'New Deaths',\r\n                        value: data.global_new_deaths,\r\n                        color: '#F35D22'\r\n                    },\r\n                    {\r\n                        icon: cured,\r\n                        title: 'Recovered',\r\n                        value: data.global_recovered,\r\n                        color: '#1EBC64'\r\n                    }\r\n\r\n                ],\r\n                hospitalData: mapHospitalizedData(data.hospital_data),\r\n            })\r\n            setfilteredHospitalData(mapHospitalizedData(data.hospital_data));\r\n        });\r\n    }\r\n\r\n    function mapHospitalizedData(data) {\r\n        return data.map(x => {\r\n            return {\r\n                id: x.hospital.id,\r\n                nameE: x.hospital.name,\r\n                nameS: x.hospital.name_si,\r\n                nameT: x.hospital.name_ta,\r\n                treatmentLocal: x.treatment_local,\r\n                treatmentForeign: x.treatment_foreign,\r\n                treatmentTotal: x.treatment_total,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    function getRelatedPage() {\r\n        switch (props.pageType) {\r\n            case PageType.Local:\r\n                return currentStatistics.local.map(x => (\r\n                    <Grid style={{ padding: 10,maxWidth:'350px'}} key={x} item xs={6} sm={6} lg={4} xl={4} >\r\n                        <StatisticCard color={x.color} icon={toSnakeCase(x.icon)} title={x.title} value={x.value} />\r\n                    </Grid>\r\n                ))\r\n            case PageType.Global:\r\n                return currentStatistics.global.map(x => (\r\n                    <Grid style={{ padding: 10,maxWidth:'350px'}} style={{ padding: 10 }} key={x} item xs={6} sm={6} lg={4} xl={4} >\r\n                        <StatisticCard color={x.color} icon={toSnakeCase(x.icon)} title={x.title} value={x.value} />\r\n                    </Grid>\r\n                ))\r\n            case PageType.HospitalDetails:\r\n                return filteredHospitalData.map(x => (                \r\n                    <Grid style={{ padding: 10 }} key={x} item xs={12} sm={12} lg={4} xl={4} >                        \r\n                        <HospitalizedCard item={x} />\r\n                    </Grid>\r\n                ))\r\n            case PageType.Charts:\r\n                return <MapComponent />\r\n\r\n            default:\r\n                return <div>\r\n\r\n                </div>\r\n\r\n        }\r\n    }\r\n\r\n    const matches = useMediaQuery('(min-width:1200px)');\r\n    return (\r\n        <Fragment>\r\n            <h6 className=\"text-left MuiTypography-colorTextSecondary\" style={{ marginLeft: 10 }}>{`Last Updated : ${moment(currentStatistics.lastUpdated).fromNow()}`}</h6>\r\n            <Grid style={{ padding: 2 ,textAlign:'center' }} justify=\"center\" container xs={12} sm={12} lg={6} xl={12} >\r\n                {\r\n                    (props.pageType === PageType.HospitalDetails) &&\r\n                    <Grid container\r\n                        direction=\"row\"\r\n                        style={{ maxWidth:'1000px', padding: 10, textAlign: 'left' }}\r\n                        item xs={12}\r\n                        sm={12}\r\n                        lg={12}\r\n                        xl={12} >                        \r\n                        <TextField\r\n                            style={{ Width: '340px' }}\r\n                            id=\"standard-multiline-flexible\"\r\n                            label=\"Search by Name\"\r\n                            multiline\r\n                            value={searchText}\r\n                            onChange={(e) => handleChange(e)}\r\n                        />\r\n                        \r\n                    </Grid>\r\n\r\n                }{\r\n                     getRelatedPage()\r\n                }\r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nCurrentStatistics.propTypes = {\r\n    pageType: PropTypes.any,\r\n}\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { CurrentStatistics } from '../components'\r\n\r\nconst StatisticPage = props => {\r\n    return (\r\n        <div style={{maxWidth:'1200px' ,marginLeft:'auto', marginRight:'auto',textAlign:'center'}}>\r\n            <CurrentStatistics pageType={props.pageType} />\r\n        </div>\r\n    )\r\n}\r\n\r\nStatisticPage.propTypes = {\r\n    pageType: PropTypes.any,\r\n}\r\n\r\nexport default StatisticPage\r\n","import React, { Fragment } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport StatisticPage from './view/statisticPage';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const StatisticRoute = ({ match,pageType }) => (\r\n    <Fragment>\r\n        <Route exact path={`${match.path}`} render={(props) => <StatisticPage {...props} pageType={pageType} />} />\r\n    </Fragment>\r\n);\r\n\r\nStatisticRoute.propTypes = {\r\n    match: PropTypes.any\r\n};","import React from 'react';\r\nimport { Typography, Toolbar, AppBar, IconButton } from '@material-ui/core';\r\n\r\nconst NavBar = props => {\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"fixed\" style={{ backgroundColor: '#121212' }} >\r\n                <Toolbar>\r\n                    <Typography style={{ textShadow: '2px 1px #686868', textAlign: 'left', width: '100%' }} align='left' variant=\"h6\" color='inherit'>\r\n                        Covid-19 Current Statistics\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NavBar\r\n","import React, { Fragment } from 'react';\r\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\r\nimport { Public, Room, HomeWork,Assessment } from '@material-ui/icons';\r\nimport { PageType } from '../../../core/enums/pageType';\r\n\r\nconst BottomNavBar = props => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"root\">\r\n                <BottomNavigation showLabels={true} style={{backgroundColor:'#121212'}} >\r\n                    <BottomNavigationAction label=\"Sri Lanka\" icon={<Room />} onClick={() => props.onChange(PageType.Local)} />\r\n                    <BottomNavigationAction label=\"Global\" icon={<Public />} onClick={() => props.onChange(PageType.Global)} />\r\n                    <BottomNavigationAction label=\"Hospitalized\" icon={<HomeWork />} onClick={() => props.onChange(PageType.HospitalDetails)} />\r\n                    <BottomNavigationAction label=\"Charts\" icon={<Assessment />} onClick={() => props.onChange(PageType.Charts)} />\r\n                </BottomNavigation>               \r\n            </div>\r\n            <div className='copyright text-center'>Developed By Atheek Azmy</div>\r\n           \r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default BottomNavBar\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from './components/navBar';\r\nimport BottomNavBar from './components/bottomNavBar';\r\n\r\nconst Layout = props => {\r\n    return (\r\n        <Fragment>\r\n            <AppBar className=\"app-bar\" />\r\n            {props.children}\r\n           <BottomNavBar className=\"bottom-navbar\" {...props}/>          \r\n        </Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default Layout\r\n\r\n\r\nLayout.propTypes = {\r\n    children: PropTypes.node,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\n\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { StatisticRoute } from '../modules/statistics/routes';\r\nimport Layout from './layout/layout';\r\n\r\nexport const AppRoutes = props => {\r\n    const [pageType, setPageType] = useState(0);\r\n    // const [visitedCount, setvisitedCount] = useState();\r\n\r\n    // useEffect(() => {\r\n    //     data.map(x => setvisitedCount(x.visitedCount));\r\n    // }, []);\r\n\r\n    \r\n\r\n    return (< BrowserRouter >\r\n        <Fragment>\r\n            <Layout onChange={setPageType.bind(this)}>\r\n                <div style={{ left: 0, right: 0, marginTop: 80, marginBottom: 90 }}>\r\n                    <Route path='/' render={(props) => <StatisticRoute {...props} pageType={pageType} />} />\r\n                    <Route path='/corona-live-statistics' render={(props) => <StatisticRoute {...props} pageType={pageType} />} />\r\n                    {/* <p style={{ color: '#fff', paddingRight: 10, textAlign: 'right', fontSize: '70%' }}>{`People Visited : ${visitedCount}`}</p> */}\r\n                </div>\r\n            </Layout>\r\n        </Fragment>\r\n    </ BrowserRouter>\r\n    )\r\n}\r\n\r\nAppRoutes.propTypes = {\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport { AppRoutes } from './routes';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\n\r\nfunction App() {\r\n  const darkTheme = createMuiTheme({\r\n  \r\n    palette: {\r\n      type: 'dark',\r\n      primary: {\r\n        light: '#757ce8',\r\n        main: '#3f50b5',\r\n        dark: '#002884',\r\n        contrastText: '#fff',\r\n      },\r\n      secondary: {\r\n        light: '#ff7961',\r\n        main: '#f44336',\r\n        dark: '#ba000d',\r\n        contrastText: '#000',\r\n      }\r\n    }   \r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <div className=\"App\" >\r\n        <AppRoutes />\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/active.473b14dc.png\";","module.exports = __webpack_public_path__ + \"static/media/cured.500bea00.png\";","module.exports = __webpack_public_path__ + \"static/media/death.9dd59e7c.png\";","module.exports = __webpack_public_path__ + \"static/media/infected.572c50c6.png\";","module.exports = __webpack_public_path__ + \"static/media/newcases.24b3962f.png\";","module.exports = __webpack_public_path__ + \"static/media/hospitalized.3111c8aa.png\";","module.exports = __webpack_public_path__ + \"static/media/newdeath.70278438.png\";","module.exports = __webpack_public_path__ + \"static/media/pin.5e99efcd.png\";"],"sourceRoot":""}